class std.String
{
	chars Ref.Array[Char]
	@AccessModifier(value=private)
}

member std.String::.constructor(Ref.Array[Char]) Void
{
	.locals 1
	.local 0 Int
	LDARG 0
	LDARG 1
	LDLEN
	NEWARR Char
	STFIELD std.String::chars
	LDINT 0
	STLOC 0
	LDLOC 0
	LDARG 1
	LDLEN
	CMPLT
	LDTRUE
	BNE 25
	LDARG 0
	LDFIELD std.String::chars
	LDLOC 0
	LDARG 1
	LDLOC 0
	LDELEM Char
	STELEM Char
	LDLOC 0
	LDINT 1
	ADD
	STLOC 0
	BR 7
	RET
}

member std.String::charAt(Int) Char
{
	LDARG 0
	LDFIELD std.String::chars
	LDARG 1
	LDELEM Char
	RET
}

member std.String::length() Int
{
	LDARG 0
	LDFIELD std.String::chars
	LDLEN
	RET
}

member std.String::concat(Ref.std.String) Ref.std.String
{
	.locals 4
	.local 0 Int
	.local 1 Ref.Array[Char]
	.local 2 Int
	.local 3 Int
	LDARG 0
	LDFIELD std.String::chars
	LDLEN
	LDARG 1
	LDFIELD std.String::chars
	LDLEN
	ADD
	STLOC 0
	LDLOC 0
	NEWARR Char
	STLOC 1
	LDINT 0
	STLOC 2
	LDLOC 2
	LDARG 0
	CALLINST std.String::length()
	CMPLT
	LDTRUE
	BNE 31
	LDLOC 1
	LDLOC 2
	LDARG 0
	LDFIELD std.String::chars
	LDLOC 2
	LDELEM Char
	STELEM Char
	LDLOC 2
	LDINT 1
	ADD
	STLOC 2
	BR 13
	LDINT 0
	STLOC 3
	LDLOC 3
	LDARG 1
	CALLINST std.String::length()
	CMPLT
	LDTRUE
	BNE 54
	LDLOC 1
	LDARG 0
	CALLINST std.String::length()
	LDLOC 3
	ADD
	LDARG 1
	LDFIELD std.String::chars
	LDLOC 3
	LDELEM Char
	STELEM Char
	LDLOC 3
	LDINT 1
	ADD
	STLOC 3
	BR 33
	LDLOC 1
	NEWOBJ std.String::.constructor(Ref.Array[Char])
	RET
}

member std.String::equals(Ref.std.String) Bool
{
	.locals 1
	.local 0 Int
	LDARG 1
	LDNULL
	CMPEQ
	LDTRUE
	BNE 7
	LDFALSE
	RET
	LDARG 0
	LDARG 1
	CMPEQ
	LDTRUE
	BNE 14
	LDTRUE
	RET
	LDARG 0
	CALLINST std.String::length()
	LDARG 1
	CALLINST std.String::length()
	CMPNE
	LDTRUE
	BNE 23
	LDFALSE
	RET
	LDINT 0
	STLOC 0
	LDLOC 0
	LDARG 0
	CALLINST std.String::length()
	CMPLT
	LDTRUE
	BNE 47
	LDARG 0
	LDLOC 0
	CALLINST std.String::charAt(Int)
	LDARG 1
	LDLOC 0
	CALLINST std.String::charAt(Int)
	CMPNE
	LDTRUE
	BNE 42
	LDFALSE
	RET
	LDLOC 0
	LDINT 1
	ADD
	STLOC 0
	BR 25
	LDTRUE
	RET
}

func std.println(Ref.std.String) Void
{
	.locals 1
	.local 0 Int
	LDINT 0
	STLOC 0
	LDLOC 0
	LDARG 0
	CALLINST std.String::length()
	CMPLT
	LDTRUE
	BNE 17
	LDARG 0
	LDLOC 0
	CALLINST std.String::charAt(Int)
	CALL std.print(Char)
	LDLOC 0
	LDINT 1
	ADD
	STLOC 0
	BR 2
	LDCHAR 10
	CALL std.print(Char)
	RET
}
